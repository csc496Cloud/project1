version: "3.3"
# Services retrieved from Dockerfile
services:
# PHP Service, obtained from docker file image installation
  php:
    build: 
      context: './php/'
      args:
       # PHP_VERSION obtained from env file
       PHP_VERSION: ${PHP_VERSION}  
      # Networks allow containers to reach one another.
      # PHP is designated as a backend network (Not exposed to outside network)
    networks:
      - backend
    # Mapping local machine contents to containers
    # Allows for code changed in host machine to reflect in container
    volumes:
      - ${PROJECT_ROOT}/:/var/www/html/ 
      # Setting up container name
    container_name: php
  apache:
    build:
      context: './apache/'
      args:
      # APACHE_VERSION obtained from env file
       APACHE_VERSION: ${APACHE_VERSION}
    depends_on:
      - php
      - mysql
      # Networks allow containers to reach one another.
      # Apache serves as frontend and backend (Exposed to outside network)
      # User Interface
    networks:
      - frontend
      - backend
    ports:
      - "8080:80"
    volumes:
      - ${PROJECT_ROOT}/:/var/www/html/
    container_name: apache
  mysql:
    image: mysql:${MYSQL_VERSION:-latest}
    restart: always
    # Listens on port 3306
    ports:
      - "3306:3306"
    volumes:
            - data:/var/lib/mysql
    networks:
      - backend
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
    container_name: mysql
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      - PMA_ARBITRARY=1
    restart: always
    ports:
      - 8899:80
networks:
  frontend:
  backend:
volumes:
    data:
